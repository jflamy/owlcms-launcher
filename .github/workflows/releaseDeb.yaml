name: ReleaseDeb

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha*'
      - 'v*.*.*-beta*'
      - 'v*.*.*-rc*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Install fyne-cross
      run: |
        go install github.com/fyne-io/fyne-cross@latest
        echo "${HOME}/go/bin" >> $GITHUB_PATH

    - name: Install Ruby
      run: sudo apt-get install -y ruby-full

    - name: Install fpm
      run: |
        sudo gem install --no-document fpm
        echo "$(gem environment gemdir)/bin" >> $GITHUB_PATH

    - name: Extract tag
      id: extract_tag
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "DEB_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Build for Windows
      run: fyne-cross windows -arch amd64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Build for Linux amd64
      run: fyne-cross linux -arch amd64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Build for Linux arm64
      run: fyne-cross linux -arch arm64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Copy binaries
      run: |
        cp fyne-cross/bin/linux-arm64/owlcms-launcher fyne-cross/bin/linux-arm64/owlcms-pi
        cp fyne-cross/bin/linux-amd64/owlcms-launcher fyne-cross/bin/linux-amd64/owlcms-linux

    - name: Create DEB packages
      run: |
        fpm -s tar -t deb -n owlcms-launcher -v ${DEB_TAG} -a arm64 --prefix / --after-install ./dist/after_install.sh --after-remove ./dist/after_remove.sh ./fyne-cross/dist/linux-arm64/owlcms.tar.xz
        fpm -s tar -t deb -n owlcms-launcher -v ${DEB_TAG} -a amd64 --prefix / --after-install ./dist/after_install.sh --after-remove ./dist/after_remove.sh ./fyne-cross/dist/linux-amd64/owlcms.tar.xz
        mv owlcms-launcher_${DEB_TAG}_arm64.deb owlcms-launcher_${DEB_TAG}_pi.deb

    - name: Prepare release notes
      run: |
        cp RELEASE.md ./dist/RELEASE.md
        sed -i "s/_TAG_/${TAG}/g" ./dist/RELEASE.md

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: "owlcms-launcher ${{ env.TAG }}"
        draft: false
        prerelease: false

    - name: Upload DEB packages
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: owlcms-launcher_${{ env.DEB_TAG }}_pi.deb
        asset_name: owlcms-launcher_${{ env.DEB_TAG }}_pi.deb
        asset_content_type: application/octet-stream

    - name: Upload DEB packages
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: owlcms-launcher_${{ env.DEB_TAG }}_amd64.deb
        asset_name: owlcms-launcher_${{ env.DEB_TAG }}_amd64.deb
        asset_content_type: application/octet-stream

    - name: Upload binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fyne-cross/bin/linux-arm64/owlcms-pi
        asset_name: owlcms-pi
        asset_content_type: application/octet-stream

    - name: Upload binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fyne-cross/bin/linux-amd64/owlcms-linux
        asset_name: owlcms-linux
        asset_content_type: application/octet-stream

    - name: Upload binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fyne-cross/bin/windows-amd64/owlcms.exe
        asset_name: owlcms.exe
        asset_content_type: application/octet-stream
