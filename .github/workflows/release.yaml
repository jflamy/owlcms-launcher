name: Release owlcms-launcher

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha*'
      - 'v*.*.*-beta*'
      - 'v*.*.*-rc*'

jobs:
  build_mac:
    runs-on: macos-13

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'

    - name: Install gh CLI
      run: |
        brew install gh

    - name: Extract tag
      id: extract_tag
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Determine if prerelease
      id: prerelease_check
      run: |
        if [[ "${TAG}" == *"-alpha"* ]]; then
          echo "PRERELEASE=true" >> $GITHUB_ENV
        else
          echo "PRERELEASE=false" >> $GITHUB_ENV
        fi

    - name: Substitute tag in config.go
      run: |
        sed -i '' "s/_TAG_/${TAG}/g" config.go

    - name: Prepare release notes
      run: |
        cp RELEASE.md ./dist/RELEASE.md
        sed -i '' "s/_TAG_/${TAG}/g" ./dist/RELEASE.md

    - name: Install fyne
      run: go install fyne.io/fyne/v2/cmd/fyne@latest

    - name: Install appdmg
      run: npm install -g appdmg

    - name: Build for macOS arm64
      run: |
        export GOOS=darwin
        export GOARCH=arm64
        export CGO_ENABLED=1
        go build -o owlcms .

    - name: Package for macOS arm64
      run: |
        rm -rf owlcms.app
        fyne package -os darwin -icon Icon.png -name owlcms -executable owlcms

    - name: Move macOS arm64 app to dist directory
      run: |
        rm -rf dist/darwin-arm64
        mkdir -p dist/darwin-arm64
        mv owlcms.app dist/darwin-arm64/
        ls -l dist/darwin-arm64

    - name: Create DMG for macOS arm64
      run: |
        pwd
        appdmg dist/appdmg_arm64.json dist/darwin-arm64/owlcms-launcher_${{ env.TAG }}_mac_arm64.dmg

    - name: Build for macOS amd64
      run: |
        rm -f owlcms
        export GOOS=darwin
        export GOARCH=amd64
        export CGO_ENABLED=1
        go build -o owlcms .

    - name: Package for macOS amd64
      run: |
        rm -rf owlcms.app
        fyne package -os darwin -icon Icon.png -name owlcms -executable owlcms

    - name: Move macOS amd64 app to dist directory
      run: |
        rm -rf dist/darwin-amd64
        mkdir -p dist/darwin-amd64
        mv owlcms.app dist/darwin-amd64/

    - name: Create DMG for macOS amd64
      run: |
        pwd
        appdmg dist/appdmg_amd64.json dist/darwin-amd64/owlcms-launcher_${{ env.TAG }}_mac_intel.dmg

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ env.PRERELEASE }}" = "true" ]; then
          gh release create ${{ env.TAG }} \
            --title "owlcms Control Panel ${{ env.TAG }}" \
            --notes-file ./dist/RELEASE.md \
            --prerelease
        else
          gh release create ${{ env.TAG }} \
            --title "owlcms Control Panel ${{ env.TAG }}" \
            --notes-file ./dist/RELEASE.md
        fi

    - name: Upload macOS arm64 DMG
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv dist/darwin-arm64/owlcms-launcher_${{ env.TAG }}_mac_arm64.dmg dist/darwin-arm64/macOS_M-series_Control_Panel_Installer.dmg
        gh release upload ${{ env.TAG }} dist/darwin-arm64/macOS_M-series_Control_Panel_Installer.dmg

    - name: Upload macOS amd64 DMG
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv dist/darwin-amd64/owlcms-launcher_${{ env.TAG }}_mac_intel.dmg dist/darwin-amd64/macOS_Intel_Control_Panel_Installer.dmg
        gh release upload ${{ env.TAG }} dist/darwin-amd64/macOS_Intel_Control_Panel_Installer.dmg

  build_deb:
    runs-on: ubuntu-latest
    needs: build_mac

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install GitHub CLI
      run: |
        wget https://github.com/cli/cli/releases/download/v2.32.0/gh_2.32.0_linux_amd64.deb
        sudo dpkg -i gh_2.32.0_linux_amd64.deb

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'

    - name: Install fyne-cross
      run: |
        go install github.com/fyne-io/fyne-cross@latest
        echo "${HOME}/go/bin" >> $GITHUB_PATH

    - name: Install Ruby
      run: sudo apt-get install -y ruby-full

    - name: Install fpm
      run: |
        sudo gem install --no-document fpm
        echo "$(gem environment gemdir)/bin" >> $GITHUB_PATH

    - name: Extract tag
      id: extract_tag
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "DEB_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Substitute tag in config.go
      run: |
        sed -i "s/_TAG_/${TAG}/g" config.go

    - name: Build for Windows
      run: fyne-cross windows -arch amd64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Build for Linux amd64
      run: fyne-cross linux -arch amd64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Build for Linux arm64
      run: fyne-cross linux -arch arm64 -app-id app.owlcms.owlcms-launcher -icon Icon.png -name owlcms

    - name: Copy binaries
      run: |
        cp fyne-cross/bin/linux-arm64/owlcms-launcher fyne-cross/bin/linux-arm64/owlcms-pi
        cp fyne-cross/bin/linux-amd64/owlcms-launcher fyne-cross/bin/linux-amd64/owlcms-linux

    - name: Create DEB packages
      run: |
        fpm -s tar -t deb -n owlcms-launcher -v ${DEB_TAG} -a arm64 --prefix / --after-install ./dist/after_install.sh --after-remove ./dist/after_remove.sh ./fyne-cross/dist/linux-arm64/owlcms.tar.xz
        fpm -s tar -t deb -n owlcms-launcher -v ${DEB_TAG} -a amd64 --prefix / --after-install ./dist/after_install.sh --after-remove ./dist/after_remove.sh ./fyne-cross/dist/linux-amd64/owlcms.tar.xz
        mv owlcms-launcher_${DEB_TAG}_arm64.deb owlcms-launcher_${DEB_TAG}_pi.deb

    - name: Upload DEB packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv owlcms-launcher_${{ env.DEB_TAG }}_pi.deb Raspberry_Pi_arm64_Control_Panel_Installer.deb
        gh release upload ${{ env.TAG }} Raspberry_Pi_arm64_Control_Panel_Installer.deb

    - name: Upload DEB packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv owlcms-launcher_${{ env.DEB_TAG }}_amd64.deb Linux_Intel_Control_Panel_Installer.deb
        gh release upload ${{ env.TAG }} Linux_Intel_Control_Panel_Installer.deb

    - name: Create Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: owlcms.exe
        path: fyne-cross/bin/windows-amd64/owlcms.exe

  package_windows:
    runs-on: windows-latest
    needs: build_deb

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install gh CLI
      run: choco install gh

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: owlcms.exe
        path: ./dist

    - name: Prepare Inno Setup directory
      run: |
        mkdir dist/iss
        cp dist/owlcms.exe dist/iss/
        cp dist/*.ico dist/iss/

    - name: Install Inno Setup
      run: choco install innosetup

    - name: Run Inno Setup
      run: |
        cd dist
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "setup.iss"
        dir

    - name: Upload Windows installer
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv dist/owlcms-Panel-installer_windows.exe Windows_Control_Panel_Installer.exe
        gh release upload ${{ env.TAG }} Windows_Control_Panel_Installer.exe
