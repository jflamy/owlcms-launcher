name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha*'
      - 'v*.*.*-beta*'
      - 'v*.*.*-rc*'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.4'

    - name: Install fyne
      run: go install fyne.io/fyne/v2/cmd/fyne@latest

    - name: Build for macOS arm64
      run: |
        export GOOS=darwin
        export GOARCH=arm64
        export CGO_ENABLED=1
        go build -o owlcms .

    - name: Package for macOS arm64
      run: |
        rm -rf owlcms.app
        fyne package -os darwin -icon Icon.png -name owlcms -executable owlcms

    - name: Move macOS arm64 app to dist directory
      run: |
        rm -rf dist/darwin-arm64
        mkdir -p dist/darwin-arm64
        mv owlcms.app dist/darwin-arm64/
        ls -l dist/darwin-arm64

    - name: Zip macOS arm64 app
      run: |
        cd dist/darwin-arm64
        zip -r owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.zip owlcms.app
        cd -
        ls -l dist/darwin-arm64

    - name: Create DMG for macOS arm64
      run: |
        mkdir -p dist/darwin-arm64/dmg
        cp -R dist/darwin-arm64/owlcms.app dist/darwin-arm64/dmg/
        hdiutil create -volname "owlcms" -srcfolder dist/darwin-arm64/dmg -ov -format UDZO dist/darwin-arm64/owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.dmg
        ls -l dist/darwin-arm64

    - name: Build for macOS amd64
      run: |
        rm -f owlcms
        export GOOS=darwin
        export GOARCH=amd64
        export CGO_ENABLED=1
        go build -o owlcms .
        ls -l owlcms

    - name: Package for macOS amd64
      run: |
        rm -rf owlcms.app
        fyne package -os darwin -icon Icon.png -name owlcms -executable owlcms
        ls -l owlcms.app

    - name: Move macOS amd64 app to dist directory
      run: |
        rm -rf dist/darwin-amd64
        mkdir -p dist/darwin-amd64
        mv owlcms.app dist/darwin-amd64/
        ls -l dist/darwin-amd64

    - name: Zip macOS amd64 app
      run: |
        cd dist/darwin-amd64
        zip -r owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.zip owlcms.app
        cd -
        ls -l dist/darwin-amd64

    - name: Create DMG for macOS amd64
      run: |
        mkdir -p dist/darwin-amd64/dmg
        cp -R dist/darwin-amd64/owlcms.app dist/darwin-amd64/dmg/
        hdiutil create -volname "owlcms" -srcfolder dist/darwin-amd64/dmg -ov -format UDZO dist/darwin-amd64/owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.dmg
        ls -l dist/darwin-amd64

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "owlcms ${{ github.ref }}"
        draft: false
        prerelease: false

    - name: Upload macOS arm64 zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/darwin-arm64/owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.zip
        asset_name: owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.zip
        asset_content_type: application/zip

    - name: Upload macOS arm64 DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/darwin-arm64/owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.dmg
        asset_name: owlcms_${GITHUB_REF#refs/tags/}_mac_arm64.dmg
        asset_content_type: application/x-apple-diskimage

    - name: Upload macOS amd64 zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/darwin-amd64/owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.zip
        asset_name: owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.zip
        asset_content_type: application/zip

    - name: Upload macOS amd64 DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/darwin-amd64/owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.dmg
        asset_name: owlcms_${GITHUB_REF#refs/tags/}_mac_amd64.dmg
        asset_content_type: application/x-apple-diskimage
